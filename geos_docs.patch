diff -rupN geos-3.11.0/include/geos/index/SpatialIndex.h geos-3.11.0-new/include/geos/index/SpatialIndex.h
--- geos-3.11.0/include/geos/index/SpatialIndex.h	2022-07-01 18:42:19.000000000 +0200
+++ geos-3.11.0-new/include/geos/index/SpatialIndex.h	2022-07-02 11:07:09.740083703 +0200
@@ -70,7 +70,6 @@ public:
      * intersect the query envelope.
      *
      * @param searchEnv the envelope to query for
-     * @return a list of the items found by the query in a newly allocated vector
      */
     //virtual std::vector<void*>* query(const geom::Envelope *searchEnv)=0;
     virtual void query(const geom::Envelope* searchEnv, std::vector<void*>&) = 0;
diff -rupN geos-3.11.0/include/geos/index/VertexSequencePackedRtree.h geos-3.11.0-new/include/geos/index/VertexSequencePackedRtree.h
--- geos-3.11.0/include/geos/index/VertexSequencePackedRtree.h	2022-07-01 18:42:19.000000000 +0200
+++ geos-3.11.0-new/include/geos/index/VertexSequencePackedRtree.h	2022-07-02 11:07:44.759084486 +0200
@@ -136,7 +136,6 @@ public:
     *
     * @param queryEnv the query extent
     * @param result vector to fill with results
-    * @return
     */
     void query(const Envelope& queryEnv, std::vector<std::size_t>& result) const;
 
diff -rupN geos-3.11.0/include/geos/noding/SegmentNodeList.h geos-3.11.0-new/include/geos/noding/SegmentNodeList.h
--- geos-3.11.0/include/geos/noding/SegmentNodeList.h	2022-07-02 11:06:21.869082632 +0200
+++ geos-3.11.0-new/include/geos/noding/SegmentNodeList.h	2022-07-02 00:22:57.506176063 +0200
@@ -155,9 +155,6 @@ public:
      * Adds an intersection into the list, if it isn't already there.
      * The input segmentIndex is expected to be normalized.
      *
-     * @return the SegmentIntersection found or added. It will be
-     *	   destroyed at SegmentNodeList destruction time.
-     *
      * @param intPt the intersection Coordinate, will be copied
      * @param segmentIndex
      */
diff -rupN geos-3.11.0/include/geos/operation/buffer/OffsetCurve.h geos-3.11.0-new/include/geos/operation/buffer/OffsetCurve.h
--- geos-3.11.0/include/geos/operation/buffer/OffsetCurve.h	2022-07-01 18:42:19.000000000 +0200
+++ geos-3.11.0-new/include/geos/operation/buffer/OffsetCurve.h	2022-07-02 11:09:25.767086746 +0200
@@ -252,7 +252,6 @@ public:
     * @param dist the offset distance
     * @param bufParams the buffer parameters to use
     * @param lineList the vector to populate with the return value
-    * @return the raw offset line
     */
     static void rawOffset(const LineString& geom, double dist, BufferParameters& bufParams, std::vector<CoordinateSequence*>& lineList);
     static void rawOffset(const LineString& geom, double dist, std::vector<CoordinateSequence*>& lineList);
diff -rupN geos-3.11.0/include/geos/precision/CommonBitsRemover.h geos-3.11.0-new/include/geos/precision/CommonBitsRemover.h
--- geos-3.11.0/include/geos/precision/CommonBitsRemover.h	2022-07-01 18:42:19.000000000 +0200
+++ geos-3.11.0-new/include/geos/precision/CommonBitsRemover.h	2022-07-02 11:59:35.455154073 +0200
@@ -74,7 +74,6 @@ public:
      *
      * @param geom the Geometry from which to remove the common
      *             coordinate bits
-     * @return the shifted Geometry
      */
     void removeCommonBits(geom::Geometry* geom);
 
diff -rupN geos-3.11.0/include/geos/triangulate/polygon/PolygonEarClipper.h geos-3.11.0-new/include/geos/triangulate/polygon/PolygonEarClipper.h
--- geos-3.11.0/include/geos/triangulate/polygon/PolygonEarClipper.h	2022-07-02 11:06:21.870082632 +0200
+++ geos-3.11.0-new/include/geos/triangulate/polygon/PolygonEarClipper.h	2022-07-02 00:22:57.507176063 +0200
@@ -184,7 +184,6 @@ public:
     *
     * @param polyShell the vertices of the polygon
     * @param triListResult vector to fill in with the resultant Tri s
-    * @return a list of the Tris
     */
     static void triangulate(std::vector<Coordinate>& polyShell, TriList<Tri>& triListResult);
 
